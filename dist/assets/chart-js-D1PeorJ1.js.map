{"version":3,"file":"chart-js-D1PeorJ1.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","/*!\n* chartjs-plugin-annotation v3.1.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2024 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, DoughnutController, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, toRadians, isObject, valueOrDefault, defined, isFunction, callback, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, getAngleFromPoint, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(visibleElements, event) {\n      return filterElements(visibleElements, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(visibleElements, event, options) {\n      return getNearestItem(visibleElements, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(visibleElements, event, options) {\n      return filterElements(visibleElements, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {AnnotationElement[]} visibleElements - annotation elements which are visible\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(visibleElements, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(visibleElements, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(visibleElements, event, options) {\n  return visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(visibleElements, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(visibleElements, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {{value: number, start: number, end: number}} limit\n * @param {number} hitSize\n * @returns {boolean}\n */\nconst inLimit = (limit, hitSize) => limit.value >= limit.start - hitSize && limit.value <= limit.end + hitSize;\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} hitSize\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, hitSize) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hitSize, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {{borderWidth: number, hitTolerance: number}} hitsize\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, {borderWidth, hitTolerance}) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const inRangeX = point.x >= x - hitSize - EPSILON && point.x <= x2 + hitSize + EPSILON;\n  const inRangeY = point.y >= y - hitSize - EPSILON && point.y <= y2 + hitSize + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {Point} point\n * @param {rect: {x: number, y: number, x2: number, y2: number}, center: {x: number, y: number}} element\n * @param {InteractionAxis} axis\n * @param {{rotation: number, borderWidth: number, hitTolerance: number}}\n * @returns {boolean}\n */\nfunction inLabelRange(point, {rect, center}, axis, {rotation, borderWidth, hitTolerance}) {\n  const rotPoint = rotated(point, center, toRadians(-rotation));\n  return inBoxRange(rotPoint, rect, axis, {borderWidth, hitTolerance});\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\nconst boxAppering = (x, y) => ({x, y, x2: x, y2: y, width: 0, height: 0});\nconst defaultInitAnimation = {\n  box: (properties) => boxAppering(properties.centerX, properties.centerY),\n  doughnutLabel: (properties) => boxAppering(properties.centerX, properties.centerY),\n  ellipse: (properties) => ({centerX: properties.centerX, centerY: properties.centerX, radius: 0, width: 0, height: 0}),\n  label: (properties) => boxAppering(properties.centerX, properties.centerY),\n  line: (properties) => boxAppering(properties.x, properties.y),\n  point: (properties) => ({centerX: properties.centerX, centerY: properties.centerY, radius: 0, width: 0, height: 0}),\n  polygon: (properties) => boxAppering(properties.centerX, properties.centerY)\n};\n\n/**\n * @typedef { import('chart.js').FontSpec } FontSpec\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').Padding } Padding\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {Point} point\n * @param {{height: number, width: number}} labelSize\n * @param {{borderWidth: number, position: {LabelPositionObject|string}, xAdjust: number, yAdjust: number}} options\n * @param {Padding|undefined} padding\n * @returns {{x: number, y: number, x2: number, y2: number, height: number, width: number, centerX: number, centerY: number}}\n */\nfunction measureLabelRectangle(point, labelSize, {borderWidth, position, xAdjust, yAdjust}, padding) {\n  const hasPadding = isObject(padding);\n  const width = labelSize.width + (hasPadding ? padding.width : 0) + borderWidth;\n  const height = labelSize.height + (hasPadding ? padding.height : 0) + borderWidth;\n  const positionObj = toPosition(position);\n  const x = calculateLabelPosition$1(point.x, width, xAdjust, positionObj.x);\n  const y = calculateLabelPosition$1(point.y, height, yAdjust, positionObj.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\n/**\n * @param {LabelPositionObject|string} value\n * @param {string|number} defaultValue\n * @returns {LabelPositionObject}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {boolean}\n */\nconst shouldFit = (options, fitRatio) => options && options.autoFit && fitRatio < 1;\n\n/**\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n * @returns {FontSpec[]}\n */\nfunction toFonts(options, fitRatio) {\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont : [optFont];\n  if (shouldFit(options, fitRatio)) {\n    return fonts.map(function(f) {\n      const font = toFont(f);\n      font.size = Math.floor(f.size * fitRatio);\n      font.lineHeight = f.lineHeight;\n      return toFont(font);\n    });\n  }\n  return fonts.map(f => toFont(f));\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\nfunction calculateLabelPosition$1(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */\nfunction initAnimationProperties(chart, properties, options) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, options);\n  }\n  return execCallback(chart, properties, options);\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault(properties, options) {\n  const type = options.type || 'line';\n  return defaultInitAnimation[type](properties);\n}\n\nfunction execCallback(chart, properties, options) {\n  const result = callback(options.init, [{chart, properties, options}]);\n  if (result === true) {\n    return applyDefault(properties, options);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle || 'butt';\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle || 'miter';\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    const size = {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n    return size;\n  }\n  const fonts = toFonts(options);\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n * @param {number} fitRatio\n */\nfunction drawLabel(ctx, rect, options, fitRatio) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const fonts = toFonts(options, fitRatio);\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\n/**\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\n/**\n * Drawa the callout component for labels.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {AnnotationElement} element - the label element\n */\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state.visibleElements, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state.visibleElements, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nclass DoughnutLabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: 0, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    if (!options.display || !options.content) {\n      return;\n    }\n    drawBackground(ctx, this);\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawLabel(ctx, this, options, this._fitRatio);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const meta = getDatasetMeta(chart, options);\n    if (!meta) {\n      return {};\n    }\n    const {controllerMeta, point, radius} = getControllerMeta(chart, options, meta);\n    let labelSize = measureLabelSize(chart.ctx, options);\n    const _fitRatio = getFitRatio(labelSize, radius);\n    if (shouldFit(options, _fitRatio)) {\n      labelSize = {width: labelSize.width * _fitRatio, height: labelSize.height * _fitRatio};\n    }\n    const {position, xAdjust, yAdjust} = options;\n    const boxSize = measureLabelRectangle(point, labelSize, {borderWidth: 0, position, xAdjust, yAdjust});\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      ...boxSize,\n      ...controllerMeta,\n      rotation: options.rotation,\n      _fitRatio\n    };\n  }\n}\n\nDoughnutLabelAnnotation.id = 'doughnutLabelAnnotation';\n\nDoughnutLabelAnnotation.defaults = {\n  autoFit: true,\n  autoHide: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  spacing: 1,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  yAdjust: 0\n};\n\nDoughnutLabelAnnotation.defaultRoutes = {\n};\n\nfunction getDatasetMeta(chart, options) {\n  return chart.getSortedVisibleDatasetMetas().reduce(function(result, value) {\n    const controller = value.controller;\n    if (controller instanceof DoughnutController &&\n      isControllerVisible(chart, options, value.data) &&\n      (!result || controller.innerRadius < result.controller.innerRadius) &&\n      controller.options.circumference >= 90) {\n      return value;\n    }\n    return result;\n  }, undefined);\n}\n\nfunction isControllerVisible(chart, options, elements) {\n  if (!options.autoHide) {\n    return true;\n  }\n  for (let i = 0; i < elements.length; i++) {\n    if (!elements[i].hidden && chart.getDataVisibility(i)) {\n      return true;\n    }\n  }\n}\n\nfunction getControllerMeta({chartArea}, options, meta) {\n  const {left, top, right, bottom} = chartArea;\n  const {innerRadius, offsetX, offsetY} = meta.controller;\n  const x = (left + right) / 2 + offsetX;\n  const y = (top + bottom) / 2 + offsetY;\n  const square = {\n    left: Math.max(x - innerRadius, left),\n    right: Math.min(x + innerRadius, right),\n    top: Math.max(y - innerRadius, top),\n    bottom: Math.min(y + innerRadius, bottom)\n  };\n  const point = {\n    x: (square.left + square.right) / 2,\n    y: (square.top + square.bottom) / 2\n  };\n  const space = options.spacing + options.borderWidth / 2;\n  const _radius = innerRadius - space;\n  const _counterclockwise = point.y > y;\n  const side = _counterclockwise ? top + space : bottom - space;\n  const angles = getAngles(side, x, y, _radius);\n  const controllerMeta = {\n    _centerX: x,\n    _centerY: y,\n    _radius,\n    _counterclockwise,\n    ...angles\n  };\n  return {\n    controllerMeta,\n    point,\n    radius: Math.min(innerRadius, Math.min(square.right - square.left, square.bottom - square.top) / 2)\n  };\n}\n\nfunction getFitRatio({width, height}, radius) {\n  const hypo = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n  return (radius * 2) / hypo;\n}\n\nfunction getAngles(y, centerX, centerY, radius) {\n  const yk2 = Math.pow(centerY - y, 2);\n  const r2 = Math.pow(radius, 2);\n  const b = centerX * -2;\n  const c = Math.pow(centerX, 2) + yk2 - r2;\n  const delta = Math.pow(b, 2) - (4 * c);\n  if (delta <= 0) {\n    return {\n      _startAngle: 0,\n      _endAngle: TAU\n    };\n  }\n  const start = (-b - Math.sqrt(delta)) / 2;\n  const end = (-b + Math.sqrt(delta)) / 2;\n  return {\n    _startAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: start, y}).angle,\n    _endAngle: getAngleFromPoint({x: centerX, y: centerY}, {x: end, y}).angle\n  };\n}\n\nfunction drawBackground(ctx, element) {\n  const {_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise, options} = element;\n  ctx.save();\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  ctx.arc(_centerX, _centerY, _radius, _startAngle, _endAngle, _counterclockwise);\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    return inLabelRange(\n      {x: mouseX, y: mouseY},\n      {rect: this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), center: this.getCenterPoint(useFinalPosition)},\n      axis,\n      {rotation: this.rotation, borderWidth: this.options.borderWidth, hitTolerance: this.options.hitTolerance}\n    );\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureLabelRectangle(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  hitTolerance: 0,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        ctx.lineWidth += this.options.hitTolerance;\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hitSize);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hitSize, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  hitTolerance: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    hitTolerance: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hitSize, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return inLimit(limit, hitSize) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, hitSize);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hitSize - EPSILON && rotatedPoint[axis] <= limit.end + hitSize + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, hitSize) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hitSize, 2)) + (b / Math.pow(yRadius + hitSize, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const hitSize = (this.options.borderWidth + this.options.hitTolerance) / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, hitSize);\n    }\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return inLimit(limit, hitSize);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  hitTolerance: 0,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth, hitTolerance}, rad) {\n  const hitSize = (borderWidth + hitTolerance) / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + hitSize),\n      bY: centerY - cos * (radius + hitSize)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  doughnutLabel: DoughnutLabelAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, elements, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, elements, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    get elements() {\n      return elements.filter((el) => el && el.options);\n    },\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"3.1.0\";\n\nconst chartStates = new Map();\nconst isNotDoughnutLabel = annotation => annotation.type !== 'doughnutLabel';\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '4.0', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations.filter(isNotDoughnutLabel), chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(isNotDoughnutLabel).filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDatasetDraw(chart, _args, options) {\n    draw(chart, _args.index, options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  getAnnotations(chart) {\n    const state = chartStates.get(chart);\n    return state ? state.elements : [];\n  },\n\n  // only for testing\n  _getAnnotationElementsAtEventForMode(visibleElements, event, options) {\n    return getElements(visibleElements, event, options);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n      colors: {\n        properties: ['backgroundColor', 'borderColor'],\n        type: 'color'\n      }\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n"],"names":["round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","r","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","distanceToDefinedLo","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","reset","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","center","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","horizontal","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","entry","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","length","diff","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","startPixel","endPixel","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","dataIndex","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","borderWidth","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_args","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","curr","interaction","visibleElements","filterElements","getNearestItem","getElements","inRangeByAxis","getPointByAxis","nearestItems","evenPoint","rotated","cx","cy","isOlderPart","act","req","clamp","inLimit","hitSize","clampAll","inPointRange","inBoxRange","hitTolerance","inRangeX","inRangeY","inLabelRange","rotPoint","getElementCenterPoint","requireVersion","pkg","ver","strict","isPercentString","toPercent","toPositivePercent","boxAppering","defaultInitAnimation","getSize","positivePercent","calculateTextAlignment","measureLabelRectangle","labelSize","xAdjust","yAdjust","hasPadding","positionObj","toPosition","calculateLabelPosition$1","shouldFit","fitRatio","toFonts","optFont","fonts","isBoundToPoint","adjust","initAnimationProperties","initAnim","applyDefault","execCallback","loadHooks","hooks","hooksContainer","widthCache","notRadius","fontsKey","isImageOrCanvas","content","translate","setBorderStyle","setShadowStyle","measureLabelSize","mapKey","calculateLabelSize","drawBox","drawLabel","getOpacity","optColor","setTextStrokeStyle","applyLabelDecoration","applyLabelContent","drawPointStyle","lhs","elementValue","drawCallout","pointX","pointY","callout","calloutPosition","resolveCalloutPosition","isPointInRange","separatorStart","separatorEnd","getCalloutSeparatorCoord","sideStart","sideEnd","getCalloutSideCoord","rotatedPoint","getCalloutSeparatorAdjust","side","getCalloutSideAdjust","resolveCalloutAutoPosition","xPoints","yPoints","limitedLineScale","scaleValue","isFinite","retrieveScaleID","axes","getDimensionByScale","getChartPoint","resolveBoxProperties","xDim","getChartDimensionByScale","yDim","resolvePointProperties","adjustCenterX","adjustCenterY","getChartCircle","resolveLineProperties","resolveFullLineProperties","resolveLimitedLineProperties","resolveBoxAndLabelProperties","resolveLabelElementProperties$1","scaleId","startProp","endProp","dim","calculateX","calculatePosition","calculateY","boxOpts","padStart","padEnd","availableSize","moveHooks","eventHooks","updateListeners","state","handleEvent","handleMoveEvents","handleClickEvents","dispatchMoveEvents","checkElements","dispatchEvent","elementHooks","updateHooks","invokeHook","callbackHook","adjustScaleRange","annotations","getScaleLimits","changeScaleLimit","verifyScaleOptions","annotation","verifyScaleIDs","suggestedLimit","scaleLimitDefined","verifyProperties","scaleIDOption","limits","updateLimits","BoxAnnotation","DoughnutLabelAnnotation","drawBackground","getDatasetMeta","controllerMeta","getControllerMeta","_fitRatio","getFitRatio","boxSize","isControllerVisible","square","space","_radius","_counterclockwise","angles","getAngles","hypo","yk2","r2","_centerX","_centerY","_startAngle","_endAngle","LabelAnnotation","getLabelSize","hBorderWidth","pointInLine","interpolateX","interpolateY","sqr","rangeLimit","coordInCurve","cp","pointInCurve","coordAngleInCurve","angleInCurve","LineAnnotation","mx","my","isOnLabel","intersects","inAxisRange","drawCurve","startOpts","endOpts","startAdjust","endAdjust","getArrowHeads","drawArrowHead","isLineInArea","limitLineToArea","getControlPoint","labelProperties","resolveLabelElementProperties","arrowHeadsDefaults","limitPointToArea","dx","dy","lenSq","xx","yy","calculateLabelPosition","calculateAutoRotation","sizes","rotatedSize","calculateT","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","spaceAround","calculateTAdjust","lineSize","lineW","lineH","coordinate","halfSize","arrowStartOpts","arrowEndOpts","getLineAdjust","arrowOpts","fill","borderColor","arrowOffsetX","drawArrowHeadOnCurve","ps","pe","EllipseAnnotation","pointInEllipse","ellipse","xRadius","yRadius","cosAngle","sinAngle","PointAnnotation","PolygonAnnotation","pointIsInPolygon","axisPoints","sides","elProps","buildPointElement","isInside","A","B","annotationTypes","directUpdater","hooks$1","optDefs","resolveObj","resolveType","updateElements","resolveAnimations","resyncElements","annotationOptions","getOrCreateElement","getContext","toSkip","updateSubElements","resolveAnnotationOptions","animOpts","mainElement","subElements","definition","subElement","initProperties","elementClass","defs","chartStates","isNotDoughnutLabel","caller","drawableElements","getDrawableElements","drawElement"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}